# Specifies the ESLint parser
parser: '@typescript-eslint/parser'

extends:
  - eslint:recommended
  - plugin:react/all
  - plugin:@typescript-eslint/recommended
  - prettier
  - prettier/@typescript-eslint
  - prettier/react
  - plugin:import/errors
  - plugin:import/warnings
  - plugin:import/typescript
  - react-app
  - plugin:jsx-a11y/recommended
  # Enables eslint-plugin-prettier and displays prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
  - plugin:prettier/recommended
  - plugin:jest/recommended
  - plugin:sonarjs/recommended

plugins:
  - react
  - react-hooks
  - jsx-a11y
  - '@typescript-eslint'
  - import
  - prettier
  - sonarjs

parserOptions:
  # Allows for the parsing of modern ECMAScript features
  ecmaVersion: 2019
  # Allows for the use of imports
  sourceType: module
  project: './tsconfig.json'
  ecmaFeatures:
    impliedStrict: true

env:
  browser: true
  es6: true
  jest: true
  jasmine: true

rules:
  # Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs
  prettier/prettier: 1

  react/prop-types:
    - 'off'

  react-hooks/rules-of-hooks: 2

  react-hooks/exhaustive-deps: 1

  import/order:
    - error
    - groups:
        - builtin
        - external
        - parent
        - sibling
        - index
        - internal
      newlines-between: always-and-inside-groups
      alphabetize:
        order: asc
        caseInsensitive: true

  react/jsx-indent:
    - 2
    - 2
    - indentLogicalExpressions: true

  react/jsx-filename-extension:
    - 1
    - extensions:
        - '.tsx'

  react/function-component-definition:
    - 1
    - namedComponents: function-declaration
      unnamedComponents: arrow-function

  react/jsx-max-depth:
    - 1
    - max: 3

  react/jsx-no-literals:
    - 2
    - noStrings: false

  react/jsx-curly-brace-presence:
    - 2
    - props: never
      children: always

overrides:
  - files:
      - '**/*.ts?(x)'
    rules:
      '@typescript-eslint/explicit-function-return-type': 1

settings:
  react:
    pragma: React
    version: detect

  import/resolver:
    node:
      paths:
        - src
      extensions:
        - '.js'
        - '.jsx'
        - '.ts'
        - '.tsx'

    import/parsers:
      '@typescript-eslint/parser':
        - '.ts'
        - '.tsx'
